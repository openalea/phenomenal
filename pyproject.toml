[build-system]
requires = [
  "setuptools",
  "setuptools-scm",
  "numpy",
  "cython",
]
build-backend = "setuptools.build_meta"

[tool.setuptools.packages.find]
where = ["src"]

[tool.setuptools]
include-package-data = false # force explicit declaration of data (disable automatic inclusion)

# enable dynamic version based on git tags
[tool.setuptools_scm]


[[tool.setuptools.ext-modules]]
  name= "openalea.phenomenal.segmentation._c_skeleton"
  sources = [
    "src/openalea/phenomenal/segmentation/src/skeleton.pyx",
    "src/openalea/phenomenal/segmentation/src/skel.cpp"
  ]
  language = "c++"

[[tool.setuptools.ext-modules]]
  name="openalea.phenomenal.multi_view_reconstruction._c_mvr"
  sources = [
    "src/openalea/phenomenal/multi_view_reconstruction/src/c_mvr.pyx",
    "src/openalea/phenomenal/multi_view_reconstruction/src/integral_image.cpp"
  ]
  language = "c++"


[project]
name = "openalea.phenomenal"
authors = [
  { name = "Simon Artzet"},
  { name = "Christian Fournier"},
  { name = "Mielewczik Michael"},
  { name = "Brichet Nicolas"},
  { name = "Chopard Jerome"},
  { name = "Christophe Pradal"},
  { name = "Benoit Daviet"},
]
description = "An automatic open source library for 3D shoot architecture reconstruction and analysis for image-based plant phenotyping"
requires-python = ">=3.9"
classifiers = [
  "Intended Audience :: Science/Research",
  "Intended Audience :: Developers",
  "Operating System :: OS Independent",
  "Programming Language :: Python :: 3 :: Only",
  "Topic :: Scientific/Engineering",
]
license = "CECILL-C"
license-files = ["LICEN[CS]E*"]
dynamic = ["version", "readme"]
dependencies = [
  "numpy",
  "scipy",
  "scikit-image",
  "scikit-learn",
  "networkx",
  "vtk",
  "orjson",
  "skan",
]

[project.optional-dependencies]
test = ["pytest"]
doc = [
  "pandoc",
  "pydata-sphinx-theme",
  "myst-parser",
  "sphinx-favicon",
  "ipykernel",
  "sphinx-copybutton",
  "ipython_genutils",
  "nbsphinx",
]
plot = [
  "matplotlib",
]
notebook = [
  "jupyterlab",
  "ipyvolume",
  ]
gpu = [
  "nx-cugraph-cu12"
]

# not used yet by pip, but by meta.yaml
[tool.conda-environment]
channels = [
  "openalea3",
  "conda-forge",
]
# deps not available in pip with conda name
dependencies = [
  "opencv",
]


[project.urls]
Homepage = "https://openalea.readthedocs.io/"
"Bug Tracker" = "https://github.com/openalea/phenomenal/issues"
Discussions = "https://github.com/openalea/phenomenal/discussions"
Changelog = "https://github.com/openalea/phenomenal/releases"

[project.entry-points."wralea"]
"openalea.phenomenal" = "openalea.phenomenal_wralea"

[tool.setuptools.dynamic]
readme = {file = ["README.md"]}
