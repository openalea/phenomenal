{% set pyproject = load_file_data('../pyproject.toml', from_recipe_dir=True) %}
{% set name = pyproject.get('project').get('name') %}
{% set description = pyproject.get('project').get('description') %}
{% set version = GIT_DESCRIBE_TAG | replace("v", "") %}
{% set license = pyproject.get('project').get('license') %}
{% set home = pyproject.get('project', {}).get('urls', {}).get('Homepage', '') %}
{% set build_deps = pyproject.get("build-system", {}).get("requires", []) %}
{% set deps = pyproject.get('project', {}).get('dependencies', []) %}
{% set pinned = pyproject.get('tool', {}).get('conda-environment', {}).get('pinned-dependencies',[]) %}
{% set conda_deps = pyproject.get('tool', {}).get('conda-environment', {}).get('dependencies',[]) %}



package:
  name: {{ name }}
  version: {{ version }}

source:
  path: ..

build:
  number: 0
  preserve_egg_dir: True
  string: {{ name | replace("openalea.", "") }}
  script:
    - {{ PYTHON }} -m pip install . --no-deps -vv

requirements:
  host:
    - python
    - numpy {{ numpy }}
    {% for dep in build_deps if dep not in pinned %}
    - {{ dep }}
    {% endfor  %}

  build:
    - {{ compiler("cxx") }}

  run:
    - python
    - {{ pin_compatible('numpy') }}
    {% for dep in deps + conda_deps if dep not in pinned %}
    - {{ dep }}
    {% endfor %}


test:
  imports:
    - openalea.phenomenal
    - openalea.phenomenal.calibration
    - openalea.phenomenal.data
    - openalea.phenomenal.display
    - openalea.phenomenal.image
    - openalea.phenomenal.mesh
    - openalea.phenomenal.multi_view_reconstruction
    - openalea.phenomenal.object
    - openalea.phenomenal.segmentation
    - openalea.phenomenal.tracking
  requires:
    - pytest
  source_files:
    - doc/examples/data/**
    - test/data/**
    - test/test_calibration/**
    - test/test_image/**
    - test/test_mesh/**
    - test/test_multi_view_reconstruction/**
    - test/test_object/**
    - test/test_tracking/**
    - test/test_segmentation/**
  commands:
    - pytest

about:
  home: {{ home }}
  summary: {{ description }}
  license: {{ license }}

extra:
  recipe-maintainers:
    - artzet-s
    - pradal
    - fournier
